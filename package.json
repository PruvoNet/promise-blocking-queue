{
  "name": "promise-blocking-queue",
  "version": "0.1.0",
  "description": "Memory optimized promise blocking queue with concurrency control",
  "main": "dist/index.js",
  "types": "dist/index.d.ts",
  "typings": "dist/index.d.ts",
  "engines": {
    "node": ">=6"
  },
  "scripts": {
    "clean": "rm -rf node_modules build coverage dist",
    "build": "npm run lint && npm run buildDist",
    "buildDist": "rm -rf dist/* && ./node_modules/.bin/tsc",
    "test": "npm run lint && npm run mocha",
    "mocha": "mocha test/**/*.ts --reporter spec --opts test/mocha.opts",
    "cover": "istanbul cover -x dist/index.js node_modules/mocha/bin/_mocha test/**/*.ts -- -R spec --opts test/mocha.opts",
    "lint": "tslint -c tslint.json 'src/**/*.ts' 'test/**/*.ts'"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/PruvoNet/promise-blocking-queue.git"
  },
  "files": [
    "/dist/!(*.spec).d.ts",
    "/dist/!(*.spec).js"
  ],
  "keywords": [
    "promise",
    "queue",
    "enqueue",
    "limit",
    "limited",
    "concurrency",
    "throttle",
    "throat",
    "rate",
    "batch",
    "ratelimit",
    "priority",
    "priorityqueue",
    "fifo",
    "job",
    "task",
    "async",
    "await",
    "promises",
    "bluebird"
  ],
  "author": "Regev Brody <regevbr@gmail.com>",
  "license": "ISC",
  "bugs": {
    "url": "https://github.com/PruvoNet/promise-blocking-queue/issues"
  },
  "homepage": "https://github.com/PruvoNet/promise-blocking-queue#readme",
  "devDependencies": {
    "@types/chai": "^4.2.15",
    "@types/chai-as-promised": "^7.1.3",
    "@types/mocha": "^8.2.1",
    "@types/node": "^14.14.31",
    "chai": "^4.2.0",
    "chai-as-promised": "^7.1.1",
    "coveralls": "^3.1.0",
    "delay": "^5.0.0",
    "dirty-chai": "^2.0.1",
    "istanbul": "^0.4.5",
    "mocha": "^6.2.3",
    "sinon": "^9.2.4",
    "sinon-chai": "^3.5.0",
    "sleep-promise": "^9.1.0",
    "ts-node": "^9.1.1",
    "tslint": "^6.1.3",
    "typescript": "^4.1.5"
  },
  "dependencies": {
    "linked-list": "^2.1.0"
  }
}
